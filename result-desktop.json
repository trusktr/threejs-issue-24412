[
	"class method:Window#(function (global, factory) {",
	"class method:Window#function (exports) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Box3#constructor(min = new Vector3(+Infinity, +Infinity, +Infinity), max = new Vector3(-Infinity, -Infinity, -Infinity)) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Box3#constructor(min = new Vector3(+Infinity, +Infinity, +Infinity), max = new Vector3(-Infinity, -Infinity, -Infinity)) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Matrix4#constructor() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Matrix4#constructor() {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Matrix4#constructor() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Matrix4#constructor() {",
	"class method:Object3D#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Vector3#clone() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#_onChange(callback) {",
	"class method:Quaternion#_onChange(callback) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Layers#constructor() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Box3#constructor(min = new Vector3(+Infinity, +Infinity, +Infinity), max = new Vector3(-Infinity, -Infinity, -Infinity)) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Box3#constructor(min = new Vector3(+Infinity, +Infinity, +Infinity), max = new Vector3(-Infinity, -Infinity, -Infinity)) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Matrix4#constructor() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Ray#constructor(origin = new Vector3(), direction = new Vector3(0, 0, -1)) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Sphere#constructor(center = new Vector3(), radius = -1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Matrix3#constructor() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Sphere#constructor(center = new Vector3(), radius = -1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#setHex(hex, colorSpace = SRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#constructor() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#setHex(hex, colorSpace = SRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#setHex(hex, colorSpace = SRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#constructor() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#setHex(hex, colorSpace = SRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Matrix3#constructor() {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#setHex(hex, colorSpace = SRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#setHex(hex, colorSpace = SRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#setHex(hex, colorSpace = SRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Vector2#clone() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#setHex(hex, colorSpace = SRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Vector2#clone() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#setHex(hex, colorSpace = SRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Vector2#clone() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Vector2#clone() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Vector2#clone() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Vector2#clone() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#constructor() {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Vector3#clone() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#setHex(hex, colorSpace = SRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#setHex(hex, colorSpace = SRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#setHex(hex, colorSpace = SRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function mergeUniforms(uniforms) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"class method:Vector2#clone() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Vector2#clone() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Vector2#clone() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:OrthographicCamera#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Vector3#clone() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#_onChange(callback) {",
	"class method:Quaternion#_onChange(callback) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Layers#constructor() {",
	"class method:OrthographicCamera#constructor() {\n\t\t\tsuper();",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:OrthographicCamera#constructor(left = -1, right = 1, top = 1, bottom = -1, near = 0.1, far = 2000) {\n\t\t\tsuper();",
	"class method:OrthographicCamera#updateProjectionMatrix() {",
	"class method:Matrix4#makeOrthographic(left, right, top, bottom, near, far) {",
	"class method:Matrix4#copy(m) {",
	"class method:Matrix4#invert() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"block inside class method:Texture#constructor(image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding) {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Source#constructor(data = null) {",
	"class method:Window#function generateUUID() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Matrix3#constructor() {",
	"block inside class method:DataArrayTexture#constructor(image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding) {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Source#constructor(data = null) {",
	"class method:Window#function generateUUID() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Matrix3#constructor() {",
	"class method:DataArrayTexture#constructor(data = null, width = 1, height = 1, depth = 1) {\n\t\t\tsuper(null);",
	"block inside class method:Data3DTexture#constructor(image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding) {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Source#constructor(data = null) {",
	"class method:Window#function generateUUID() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Matrix3#constructor() {",
	"block inside class method:Data3DTexture#constructor(data = null, width = 1, height = 1, depth = 1) {\n\t\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t\t// Users can still set in DataTexture3D directly.\n\t\t\t//\n\t\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t\t// \ttexture.anisotropy = 16;\n\t\t\t//\n\t\t\t// See #14839\n\t\t\tsuper(null);",
	"block inside class method:CubeTexture#constructor(image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding) {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Source#constructor(data = null) {",
	"class method:Window#function generateUUID() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Matrix3#constructor() {",
	"block inside class method:CubeTexture#constructor(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n\t\t\timages = images !== undefined ? images : [];\n\t\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\t\tsuper(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Matrix4#constructor() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector4#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector4#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:BufferGeometry#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:MeshBasicMaterial#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:MeshBasicMaterial#constructor(parameters) {\n\t\t\tsuper();",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#setHex(hex, colorSpace = SRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:MeshBasicMaterial#setValues(values) {",
	"class method:Mesh#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Vector3#clone() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#_onChange(callback) {",
	"class method:Quaternion#_onChange(callback) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Layers#constructor() {",
	"class method:Mesh#constructor(geometry = new BufferGeometry(), material = new MeshBasicMaterial()) {\n\t\t\tsuper();",
	"class method:Mesh#updateMorphTargets() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Matrix4#constructor() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Ray#constructor(origin = new Vector3(), direction = new Vector3(0, 0, -1)) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Sphere#constructor(center = new Vector3(), radius = -1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Matrix4#constructor() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Ray#constructor(origin = new Vector3(), direction = new Vector3(0, 0, -1)) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Sphere#constructor(center = new Vector3(), radius = -1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:CubicPoly#function CubicPoly() {",
	"class method:CubicPoly#function CubicPoly() {",
	"class method:CubicPoly#function CubicPoly() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Triangle#constructor(a = new Vector3(), b = new Vector3(), c = new Vector3()) {",
	"class method:LoadingManager#constructor(onLoad, onProgress, onError) {",
	"class method:Matrix4#constructor() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Matrix4#constructor() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Camera#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Vector3#clone() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#_onChange(callback) {",
	"class method:Quaternion#_onChange(callback) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Layers#constructor() {",
	"class method:Camera#constructor() {\n\t\t\tsuper();",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Box3#constructor(min = new Vector3(+Infinity, +Infinity, +Infinity), max = new Vector3(-Infinity, -Infinity, -Infinity)) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Window#function _generateTables() {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"block inside class method:Window#while ((m & 0x00800000) === 0) {",
	"class method:WebGLRenderer#function WebGLRenderer(parameters = {}) {",
	"class method:Window#function createCanvasElement() {",
	"class method:Window#function createElementNS(name) {",
	"class method:Vector4#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector4#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector4#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector4#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Plane#constructor(normal = new Vector3(1, 0, 0), constant = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Plane#constructor(normal = new Vector3(1, 0, 0), constant = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Plane#constructor(normal = new Vector3(1, 0, 0), constant = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Plane#constructor(normal = new Vector3(1, 0, 0), constant = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Plane#constructor(normal = new Vector3(1, 0, 0), constant = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Plane#constructor(normal = new Vector3(1, 0, 0), constant = 0) {",
	"class method:Frustum#constructor(p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane()) {",
	"class method:Matrix4#constructor() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Window#function getContext(contextNames, contextAttributes) {",
	"class method:Window#function initGLContext() {",
	"class method:WebGLExtensions#function WebGLExtensions(gl) {",
	"class method:WebGLCapabilities#function WebGLCapabilities(gl, extensions, parameters) {",
	"class method:Window#function getMaxPrecision(precision) {",
	"class method:Object#function (capabilities) {",
	"class method:Window#function getExtension(name) {",
	"class method:Window#function getExtension(name) {",
	"class method:Window#function getExtension(name) {",
	"class method:Window#function getExtension(name) {",
	"class method:WebGLUtils#function WebGLUtils(gl, extensions, capabilities) {",
	"class method:WebGLState#function WebGLState(gl, extensions, capabilities) {",
	"class method:ColorBuffer#function ColorBuffer() {",
	"class method:Vector4#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector4#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:DepthBuffer#function DepthBuffer() {",
	"class method:StencilBuffer#function StencilBuffer() {",
	"class method:Vector4#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector4#fromArray(array, offset = 0) {",
	"class method:Vector4#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector4#fromArray(array, offset = 0) {",
	"class method:Window#function createTexture(type, target, count) {",
	"class method:Window#function createTexture(type, target, count) {",
	"class method:Object#function (r, g, b, a, premultipliedAlpha) {",
	"class method:Vector4#set(x, y, z, w) {",
	"class method:Vector4#equals(v) {",
	"class method:Vector4#copy(v) {",
	"class method:Object#function (depth) {",
	"class method:Object#function (stencil) {",
	"class method:Window#function enable(id) {",
	"class method:Object#function (depthFunc) {",
	"class method:Window#function setFlipSided(flipSided) {",
	"class method:Window#function setCullFace(cullFace) {",
	"class method:Window#function enable(id) {",
	"class method:Window#function enable(id) {",
	"class method:Window#function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {",
	"class method:WebGLInfo#function WebGLInfo(gl) {",
	"class method:WebGLProperties#function WebGLProperties() {",
	"class method:WebGLTextures#function WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {",
	"class method:Object#function (name) {",
	"class method:Window#function getExtension(name) {",
	"class method:WebGLCubeMaps#function WebGLCubeMaps(renderer) {",
	"class method:WebGLCubeUVMaps#function WebGLCubeUVMaps(renderer) {",
	"class method:WebGLAttributes#function WebGLAttributes(gl, capabilities) {",
	"class method:WebGLBindingStates#function WebGLBindingStates(gl, extensions, attributes, capabilities) {",
	"class method:Window#function createBindingState(vao) {",
	"class method:WebGLGeometries#function WebGLGeometries(gl, attributes, info, bindingStates) {",
	"class method:WebGLObjects#function WebGLObjects(gl, geometries, attributes, info) {",
	"class method:WebGLMorphtargets#function WebGLMorphtargets(gl, capabilities, textures) {",
	"class method:Vector4#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:WebGLClipping#function WebGLClipping(properties) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Plane#constructor(normal = new Vector3(1, 0, 0), constant = 0) {",
	"class method:Matrix3#constructor() {",
	"class method:WebGLPrograms#function WebGLPrograms(renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping) {",
	"class method:Layers#constructor() {",
	"class method:WebGLShaderCache#constructor() {",
	"class method:WebGLMaterials#function WebGLMaterials(renderer, properties) {",
	"class method:WebGLRenderLists#function WebGLRenderLists() {",
	"class method:WebGLRenderStates#function WebGLRenderStates(extensions, capabilities) {",
	"class method:WebGLBackground#function WebGLBackground(renderer, cubemaps, state, objects, alpha, premultipliedAlpha) {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#set(value) {",
	"class method:Color#setHex(hex, colorSpace = SRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:WebGLShadowMap#function WebGLShadowMap(_renderer, _objects, _capabilities) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Plane#constructor(normal = new Vector3(1, 0, 0), constant = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Plane#constructor(normal = new Vector3(1, 0, 0), constant = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Plane#constructor(normal = new Vector3(1, 0, 0), constant = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Plane#constructor(normal = new Vector3(1, 0, 0), constant = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Plane#constructor(normal = new Vector3(1, 0, 0), constant = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Plane#constructor(normal = new Vector3(1, 0, 0), constant = 0) {",
	"class method:Frustum#constructor(p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane()) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:Vector4#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:MeshDepthMaterial#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:MeshDepthMaterial#constructor(parameters) {\n\t\t\tsuper();",
	"class method:MeshDepthMaterial#setValues(values) {",
	"class method:MeshDistanceMaterial#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:MeshDistanceMaterial#constructor(parameters) {\n\t\t\tsuper();",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:MeshDistanceMaterial#setValues(values) {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:ShaderMaterial#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:ShaderMaterial#constructor(parameters) {\n\t\t\tsuper();",
	"class method:ShaderMaterial#setValues(values) {",
	"class method:ShaderMaterial#clone() {",
	"class method:ShaderMaterial#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:ShaderMaterial#constructor(parameters) {\n\t\t\tsuper();",
	"class method:ShaderMaterial#copy(source) {",
	"class method:ShaderMaterial#copy(source) {",
	"block inside class method:Window#function cloneUniforms(src) {",
	"class method:Vector2#clone() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"block inside class method:Window#function cloneUniformsGroups(src) {",
	"class method:BufferGeometry#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:BufferAttribute#constructor(array, itemSize, normalized) {",
	"class method:BufferGeometry#setAttribute(name, attribute) {",
	"class method:Mesh#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Vector3#clone() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#_onChange(callback) {",
	"class method:Quaternion#_onChange(callback) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Layers#constructor() {",
	"class method:Mesh#constructor(geometry = new BufferGeometry(), material = new MeshBasicMaterial()) {\n\t\t\tsuper();",
	"class method:Mesh#updateMorphTargets() {",
	"block inside class method:WebGLUniformsGroups#function WebGLUniformsGroups(gl, info, capabilities, state) {",
	"class method:WebGLBufferRenderer#function WebGLBufferRenderer(gl, extensions, info, capabilities) {",
	"class method:WebGLIndexedBufferRenderer#function WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {",
	"class method:WebXRManager#constructor(renderer, gl) {\n\t\t\tsuper();",
	"class method:PerspectiveCamera#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Vector3#clone() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#_onChange(callback) {",
	"class method:Quaternion#_onChange(callback) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Layers#constructor() {",
	"class method:PerspectiveCamera#constructor() {\n\t\t\tsuper();",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:PerspectiveCamera#constructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\n\t\t\tsuper();",
	"class method:PerspectiveCamera#updateProjectionMatrix() {",
	"class method:Matrix4#makePerspective(left, right, top, bottom, near, far) {",
	"class method:Matrix4#copy(m) {",
	"class method:Matrix4#invert() {",
	"class method:Layers#enable(channel) {",
	"class method:Vector4#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:PerspectiveCamera#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Vector3#clone() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#_onChange(callback) {",
	"class method:Quaternion#_onChange(callback) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Layers#constructor() {",
	"class method:PerspectiveCamera#constructor() {\n\t\t\tsuper();",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:PerspectiveCamera#constructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\n\t\t\tsuper();",
	"class method:PerspectiveCamera#updateProjectionMatrix() {",
	"class method:Matrix4#makePerspective(left, right, top, bottom, near, far) {",
	"class method:Matrix4#copy(m) {",
	"class method:Matrix4#invert() {",
	"class method:Layers#enable(channel) {",
	"class method:Vector4#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:ArrayCamera#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Vector3#clone() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#_onChange(callback) {",
	"class method:Quaternion#_onChange(callback) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Layers#constructor() {",
	"class method:ArrayCamera#constructor() {\n\t\t\tsuper();",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:ArrayCamera#constructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\n\t\t\tsuper();",
	"class method:ArrayCamera#updateProjectionMatrix() {",
	"class method:Matrix4#makePerspective(left, right, top, bottom, near, far) {",
	"class method:Matrix4#copy(m) {",
	"class method:Matrix4#invert() {",
	"class method:ArrayCamera#constructor(array = []) {\n\t\t\tsuper();",
	"class method:Layers#enable(channel) {",
	"class method:Layers#enable(channel) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:WebGLAnimation#function WebGLAnimation() {",
	"class method:Object#function (callback) {",
	"class method:WebGLAnimation#function WebGLAnimation() {",
	"class method:Object#function (callback) {",
	"class method:Object#function (value) {",
	"class method:WebXRManager#addEventListener(type, listener) {",
	"class method:WebXRManager#addEventListener(type, listener) {",
	"class method:WebGLRenderer#function (width, height, updateStyle) {",
	"class method:WebGLRenderer#function (x, y, width, height) {",
	"class method:Vector4#set(x, y, z, w) {",
	"class method:Vector4#copy(v) {",
	"class method:Vector4#multiplyScalar(scalar) {",
	"class method:Vector4#floor() {",
	"class method:Object#function viewport(viewport) {",
	"class method:Vector4#equals(v) {",
	"class method:Vector4#copy(v) {",
	"class method:PerspectiveCamera#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Vector3#clone() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#_onChange(callback) {",
	"class method:Quaternion#_onChange(callback) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Layers#constructor() {",
	"class method:PerspectiveCamera#constructor() {\n\t\t\tsuper();",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:PerspectiveCamera#constructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\n\t\t\tsuper();",
	"class method:PerspectiveCamera#updateProjectionMatrix() {",
	"class method:Matrix4#makePerspective(left, right, top, bottom, near, far) {",
	"class method:Matrix4#copy(m) {",
	"class method:Matrix4#invert() {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Scene#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Vector3#clone() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#_onChange(callback) {",
	"class method:Quaternion#_onChange(callback) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Layers#constructor() {",
	"class method:Scene#constructor() {\n\t\t\tsuper();",
	"class method:BoxGeometry#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:BoxGeometry#constructor(width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {\n\t\t\tsuper();",
	"plain function:function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:BoxGeometry#addGroup(start, count, materialIndex = 0) {",
	"plain function:function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:BoxGeometry#addGroup(start, count, materialIndex = 0) {",
	"plain function:function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:BoxGeometry#addGroup(start, count, materialIndex = 0) {",
	"plain function:function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:BoxGeometry#addGroup(start, count, materialIndex = 0) {",
	"plain function:function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:BoxGeometry#addGroup(start, count, materialIndex = 0) {",
	"plain function:function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:BoxGeometry#addGroup(start, count, materialIndex = 0) {",
	"class method:BoxGeometry#setIndex(index) {",
	"class method:Window#function arrayNeedsUint32(array) {",
	"class method:Uint16BufferAttribute#constructor(array, itemSize, normalized) {",
	"class method:Uint16BufferAttribute#constructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);",
	"class method:Float32BufferAttribute#constructor(array, itemSize, normalized) {",
	"class method:Float32BufferAttribute#constructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float32Array(array), itemSize, normalized);",
	"class method:BoxGeometry#setAttribute(name, attribute) {",
	"class method:Float32BufferAttribute#constructor(array, itemSize, normalized) {",
	"class method:Float32BufferAttribute#constructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float32Array(array), itemSize, normalized);",
	"class method:BoxGeometry#setAttribute(name, attribute) {",
	"class method:Float32BufferAttribute#constructor(array, itemSize, normalized) {",
	"class method:Float32BufferAttribute#constructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float32Array(array), itemSize, normalized);",
	"class method:BoxGeometry#setAttribute(name, attribute) {",
	"class method:MeshNormalMaterial#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:MeshNormalMaterial#constructor(parameters) {\n\t\t\tsuper();",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:MeshNormalMaterial#setValues(values) {",
	"class method:Mesh#constructor() {\n\t\t\tsuper();",
	"class method:Window#function generateUUID() {",
	"class method:Vector3#clone() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {",
	"class method:Quaternion#constructor(x = 0, y = 0, z = 0, w = 1) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Euler#_onChange(callback) {",
	"class method:Quaternion#_onChange(callback) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Layers#constructor() {",
	"class method:Mesh#constructor(geometry = new BufferGeometry(), material = new MeshBasicMaterial()) {\n\t\t\tsuper();",
	"class method:Mesh#updateMorphTargets() {",
	"class method:Scene#add(object) {",
	"class method:Mesh#dispatchEvent(event) {",
	"class method:Euler#set(x, y, z, order = this._order) {",
	"class method:Euler#function onRotationChange() {",
	"class method:Quaternion#setFromEuler(euler, update) {",
	"class method:WebGLRenderer#function (value) {",
	"class method:WebGLRenderer#function (width, height, updateStyle) {",
	"class method:WebGLRenderer#function (x, y, width, height) {",
	"class method:Vector4#set(x, y, z, w) {",
	"class method:Vector4#copy(v) {",
	"class method:Vector4#multiplyScalar(scalar) {",
	"class method:Vector4#floor() {",
	"class method:Object#function viewport(viewport) {",
	"class method:Vector4#equals(v) {",
	"class method:Vector4#copy(v) {",
	"class method:PerspectiveCamera#updateProjectionMatrix() {",
	"class method:Matrix4#makePerspective(left, right, top, bottom, near, far) {",
	"class method:Matrix4#copy(m) {",
	"class method:Matrix4#invert() {",
	"class method:WebGLRenderer#function (width, height, updateStyle) {",
	"class method:WebGLRenderer#function (x, y, width, height) {",
	"class method:Vector4#set(x, y, z, w) {",
	"class method:Vector4#copy(v) {",
	"class method:Vector4#multiplyScalar(scalar) {",
	"class method:Vector4#floor() {",
	"class method:Object#function viewport(viewport) {",
	"class method:Vector4#equals(v) {",
	"class method:Vector4#copy(v) {",
	"class method:WebGLRenderer#function (scene, camera) {",
	"block inside class method:Scene#updateMatrixWorld(force) {",
	"class method:Scene#updateMatrix() {",
	"class method:Matrix4#compose(position, quaternion, scale) {",
	"class method:Matrix4#copy(m) {",
	"block inside class method:Mesh#updateMatrixWorld(force) {",
	"class method:Mesh#updateMatrix() {",
	"class method:Matrix4#compose(position, quaternion, scale) {",
	"class method:Matrix4#multiplyMatrices(a, b) {",
	"block inside class method:PerspectiveCamera#updateMatrixWorld(force) {",
	"block inside class method:PerspectiveCamera#updateMatrixWorld(force) {",
	"class method:PerspectiveCamera#updateMatrix() {",
	"class method:Matrix4#compose(position, quaternion, scale) {",
	"class method:Matrix4#copy(m) {",
	"class method:Matrix4#copy(m) {",
	"class method:Matrix4#invert() {",
	"block inside class method:Scene#onBeforeRender() {",
	"class method:Object#function get(scene, renderCallDepth = 0) {",
	"class method:WebGLRenderState#function WebGLRenderState(extensions, capabilities) {",
	"class method:WebGLLights#function WebGLLights(extensions, capabilities) {",
	"block inside class method:UniformsCache#function UniformsCache() {",
	"block inside class method:Window#function ShadowUniformsCache() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Matrix4#constructor() {",
	"class method:Matrix4#constructor() {",
	"class method:Object#function init() {",
	"class method:Matrix4#multiplyMatrices(a, b) {",
	"class method:Frustum#setFromProjectionMatrix(m) {",
	"class method:Plane#setComponents(x, y, z, w) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Plane#normalize() {",
	"class method:Vector3#length() {",
	"class method:Vector3#multiplyScalar(scalar) {",
	"class method:Plane#setComponents(x, y, z, w) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Plane#normalize() {",
	"class method:Vector3#length() {",
	"class method:Vector3#multiplyScalar(scalar) {",
	"class method:Plane#setComponents(x, y, z, w) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Plane#normalize() {",
	"class method:Vector3#length() {",
	"class method:Vector3#multiplyScalar(scalar) {",
	"class method:Plane#setComponents(x, y, z, w) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Plane#normalize() {",
	"class method:Vector3#length() {",
	"class method:Vector3#multiplyScalar(scalar) {",
	"class method:Plane#setComponents(x, y, z, w) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Plane#normalize() {",
	"class method:Vector3#length() {",
	"class method:Vector3#multiplyScalar(scalar) {",
	"class method:Plane#setComponents(x, y, z, w) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Plane#normalize() {",
	"class method:Vector3#length() {",
	"class method:Vector3#multiplyScalar(scalar) {",
	"class method:WebGLClipping#function (planes, enableLocalClipping, camera) {",
	"block inside class method:Window#function projectPlanes(planes, camera, dstOffset, skipTransform) {",
	"class method:Object#function get(scene, renderCallDepth) {",
	"class method:WebGLRenderList#function WebGLRenderList() {",
	"class method:Object#function init() {",
	"class method:Window#function projectObject(object, camera, groupOrder, sortObjects) {",
	"class method:Layers#test(layers) {",
	"class method:Window#function projectObject(object, camera, groupOrder, sortObjects) {",
	"class method:Layers#test(layers) {",
	"class method:Frustum#intersectsObject(object) {",
	"class method:BoxGeometry#computeBoundingSphere() {",
	"class method:Vector3#constructor(x = 0, y = 0, z = 0) {",
	"class method:Sphere#constructor(center = new Vector3(), radius = -1) {",
	"class method:Box3#setFromBufferAttribute(attribute) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Box3#getCenter(target) {",
	"class method:Box3#isEmpty() {",
	"class method:Vector3#addVectors(a, b) {",
	"class method:Vector3#multiplyScalar(scalar) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Vector3#fromBufferAttribute(attribute, index) {",
	"class method:Float32BufferAttribute#getX(index) {",
	"class method:Float32BufferAttribute#getY(index) {",
	"class method:Float32BufferAttribute#getZ(index) {",
	"class method:Vector3#distanceToSquared(v) {",
	"class method:Sphere#copy(sphere) {",
	"class method:Vector3#copy(v) {",
	"class method:Sphere#applyMatrix4(matrix) {",
	"class method:Vector3#applyMatrix4(m) {",
	"class method:Matrix4#getMaxScaleOnAxis() {",
	"class method:Frustum#intersectsSphere(sphere) {",
	"class method:Plane#distanceToPoint(point) {",
	"class method:Vector3#dot(v) {",
	"class method:Plane#distanceToPoint(point) {",
	"class method:Vector3#dot(v) {",
	"class method:Plane#distanceToPoint(point) {",
	"class method:Vector3#dot(v) {",
	"class method:Plane#distanceToPoint(point) {",
	"class method:Vector3#dot(v) {",
	"class method:Plane#distanceToPoint(point) {",
	"class method:Vector3#dot(v) {",
	"class method:Plane#distanceToPoint(point) {",
	"class method:Vector3#dot(v) {",
	"class method:Vector3#setFromMatrixPosition(m) {",
	"class method:Vector3#applyMatrix4(m) {",
	"class method:Object#function update(object) {",
	"class method:Object#function get(object, geometry) {",
	"class method:BoxGeometry#addEventListener(type, listener) {",
	"class method:Object#function update(geometry) {",
	"class method:Object#function update(attribute, bufferType) {",
	"class method:Window#function createBuffer(attribute, bufferType) {",
	"class method:Float32BufferAttribute#onUploadCallback() {",
	"class method:Object#function update(attribute, bufferType) {",
	"class method:Window#function createBuffer(attribute, bufferType) {",
	"class method:Float32BufferAttribute#onUploadCallback() {",
	"class method:Object#function update(attribute, bufferType) {",
	"class method:Window#function createBuffer(attribute, bufferType) {",
	"class method:Float32BufferAttribute#onUploadCallback() {",
	"class method:Object#function push(object, geometry, material, groupOrder, z, group) {",
	"class method:Window#function getNextRenderItem(object, geometry, material, groupOrder, z, group) {",
	"class method:Object#function finish() {",
	"class method:Object#function sort(customOpaqueSort, customTransparentSort) {",
	"class method:WebGLShadowMap#function (lights, scene, camera) {",
	"class method:Object#function reset() {",
	"class method:Object#function render(renderList, scene) {",
	"class method:WebXRManager#function () {",
	"class method:Window#function setClear(color, alpha) {",
	"class method:Object#function (r, g, b, a, premultipliedAlpha) {",
	"class method:Vector4#set(x, y, z, w) {",
	"class method:Vector4#equals(v) {",
	"class method:WebGLRenderer#function (color = true, depth = true, stencil = true) {",
	"class method:Object#function setupLights(physicallyCorrectLights) {",
	"class method:Object#function setup(lights, physicallyCorrectLights) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Vector3#set(x, y, z) {",
	"class method:Window#function renderScene(currentRenderList, scene, camera, viewport) {",
	"class method:Object#function setupLightsView(camera) {",
	"class method:Object#function setupView(lights, camera) {",
	"class method:Window#function renderObjects(renderList, scene, camera) {",
	"class method:Layers#test(layers) {",
	"class method:Window#function renderObject(object, scene, camera, geometry, material, group) {",
	"block inside class method:Mesh#onBeforeRender() {",
	"class method:Matrix4#multiplyMatrices(a, b) {",
	"class method:Matrix3#getNormalMatrix(matrix4) {",
	"class method:Matrix3#setFromMatrix4(m) {",
	"class method:Matrix3#set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {",
	"class method:Matrix3#invert() {",
	"class method:Matrix3#transpose() {",
	"block inside class method:MeshNormalMaterial#onBeforeRender() {",
	"class method:WebGLRenderer#function (camera, scene, geometry, material, object, group) {",
	"class method:Matrix4#determinant() {",
	"class method:Window#function setProgram(camera, scene, geometry, material, object) {",
	"class method:WebGLTextures#function resetTextureUnits() {",
	"class method:Object#function get(texture) {",
	"class method:Object#function get(object) {",
	"class method:Window#function getProgram(material, scene, object) {",
	"class method:Object#function get(object) {",
	"class method:Object#function getParameters(material, lights, shadows, scene, object) {",
	"class method:Object#function get(texture) {",
	"class method:WebGLRenderer#function () {",
	"class method:MeshNormalMaterial#customProgramCacheKey() {",
	"class method:Object#function getProgramCacheKey(parameters) {",
	"class method:Window#function getProgramCacheKeyParameters(array, parameters) {",
	"class method:Window#function getProgramCacheKeyBooleans(array, parameters) {",
	"class method:Layers#disableAll() {",
	"class method:Layers#enable(channel) {",
	"class method:Layers#enable(channel) {",
	"class method:Layers#enable(channel) {",
	"class method:Layers#disableAll() {",
	"class method:Layers#enable(channel) {",
	"class method:Object#function get(texture) {",
	"class method:MeshNormalMaterial#addEventListener(type, listener) {",
	"block inside class method:Object#function getUniforms(material) {",
	"block inside class method:Object#function cloneUniforms(src) {",
	"class method:Color#clone() {",
	"class method:Color#constructor(r, g, b) {",
	"class method:Color#setRGB(r, g, b, colorSpace = LinearSRGBColorSpace) {",
	"class method:Object#function (color, sourceColorSpace) {",
	"class method:Object#function (color, sourceColorSpace, targetColorSpace) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"class method:Matrix3#clone() {",
	"class method:Matrix3#constructor() {",
	"class method:Matrix3#fromArray(array, offset = 0) {",
	"class method:Vector2#clone() {",
	"class method:Vector2#constructor(x = 0, y = 0) {",
	"class method:MeshNormalMaterial#onBuild() {",
	"block inside class method:MeshNormalMaterial#onBeforeCompile() {",
	"class method:Object#function acquireProgram(parameters, cacheKey) {",
	"class method:WebGLProgram#function WebGLProgram(renderer, cacheKey, parameters, bindingStates) {",
	"class method:WebGLRenderer#function () {",
	"class method:Window#function generateShadowMapTypeDefine(parameters) {",
	"class method:Window#function generateEnvMapTypeDefine(parameters) {",
	"class method:Window#function generateEnvMapModeDefine(parameters) {",
	"class method:Window#function generateEnvMapBlendingDefine(parameters) {",
	"class method:Window#function generateCubeUVSize(parameters) {",
	"class method:Window#function generateDefines(defines) {",
	"class method:Window#function generatePrecision(parameters) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function generatePrecision(parameters) {",
	"class method:Window#function getTexelEncodingFunction(functionName, encoding) {",
	"class method:Window#function getEncodingComponents(encoding) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function filterEmptyLine(string) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function replaceLightNums(string, parameters) {",
	"class method:Window#function replaceClippingPlaneNums(string, parameters) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function includeReplacer(match, include) {",
	"class method:Window#function resolveIncludes(string) {",
	"class method:Window#function replaceLightNums(string, parameters) {",
	"class method:Window#function replaceClippingPlaneNums(string, parameters) {",
	"class method:Window#function unrollLoops(string) {",
	"class method:Window#function unrollLoops(string) {",
	"class method:Window#function loopReplacer(match, start, end, snippet) {",
	"class method:Window#function loopReplacer(match, start, end, snippet) {",
	"class method:Window#function WebGLShader(gl, type, string) {",
	"class method:Window#function WebGLShader(gl, type, string) {",
	"class method:Window#function updateCommonMaterialProperties(material, parameters) {",
	"class method:Object#function get(object) {",
	"class method:Window#function materialNeedsLights(material) {",
	"class method:WebGLProgram#function () {",
	"class method:WebGLUniforms#constructor(gl, program) {",
	"block inside class method:Window#function parseUniform(activeInfo, addr, container) {",
	"block inside class method:Window#while (true) {",
	"class method:SingleUniform#constructor(id, activeInfo, addr) {",
	"class method:Window#function getSingularSetter(type) {",
	"block inside class method:Window#function addUniform(container, uniformObject) {",
	"block inside class method:Window#function parseUniform(activeInfo, addr, container) {",
	"block inside class method:Window#while (true) {",
	"class method:SingleUniform#constructor(id, activeInfo, addr) {",
	"class method:Window#function getSingularSetter(type) {",
	"block inside class method:Window#function addUniform(container, uniformObject) {",
	"block inside class method:Window#function parseUniform(activeInfo, addr, container) {",
	"block inside class method:Window#while (true) {",
	"class method:SingleUniform#constructor(id, activeInfo, addr) {",
	"class method:Window#function getSingularSetter(type) {",
	"block inside class method:Window#function addUniform(container, uniformObject) {",
	"block inside class method:Window#function parseUniform(activeInfo, addr, container) {",
	"block inside class method:Window#while (true) {",
	"class method:SingleUniform#constructor(id, activeInfo, addr) {",
	"class method:Window#function getSingularSetter(type) {",
	"block inside class method:Window#function addUniform(container, uniformObject) {",
	"class method:WebGLProgram#function () {",
	"class method:Object#function useProgram(program) {",
	"class method:WebGLUniforms#setValue(gl, name, value, textures) {",
	"class method:SingleUniform#function setValueM4(gl, v) {",
	"class method:Window#function arraysEqual(a, b) {",
	"class method:Window#function copyArray(a, b) {",
	"class method:WebGLUniforms#setValue(gl, name, value, textures) {",
	"class method:WebGLUniforms#setValue(gl, name, value, textures) {",
	"block inside class method:Object#function refreshMaterialUniforms(uniforms, material, pixelRatio, height, transmissionRenderTarget) {",
	"block inside class method:Window#function refreshUniformsCommon(uniforms, material) {",
	"class method:Object#function get(object) {",
	"class method:SingleUniform#function setValueV1f(gl, v) {",
	"class method:WebGLUniforms#setValue(gl, name, value, textures) {",
	"class method:SingleUniform#function setValueM4(gl, v) {",
	"class method:Window#function arraysEqual(a, b) {",
	"class method:Window#function copyArray(a, b) {",
	"class method:WebGLUniforms#setValue(gl, name, value, textures) {",
	"class method:SingleUniform#function setValueM3(gl, v) {",
	"class method:Window#function arraysEqual(a, b) {",
	"class method:Window#function copyArray(a, b) {",
	"class method:WebGLUniforms#setValue(gl, name, value, textures) {",
	"class method:Object#function setMaterial(material, frontFaceCW) {",
	"class method:Window#function enable(id) {",
	"class method:Window#function setFlipSided(flipSided) {",
	"class method:Window#function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {",
	"class method:Object#function (depthFunc) {",
	"class method:Object#function (depthTest) {",
	"class method:Window#function enable(id) {",
	"class method:Object#function (depthMask) {",
	"class method:Object#function (colorMask) {",
	"class method:Object#function (stencilTest) {",
	"class method:Window#function disable(id) {",
	"class method:Window#function setPolygonOffset(polygonOffset, factor, units) {",
	"class method:Window#function disable(id) {",
	"class method:Window#function disable(id) {",
	"class method:Object#function setup(object, material, program, geometry, index) {",
	"class method:Window#function getBindingState(geometry, program, material) {",
	"class method:Window#function createVertexArrayObject() {",
	"class method:Window#function createBindingState(vao) {",
	"class method:Window#function bindVertexArrayObject(vao) {",
	"class method:Window#function needsUpdate(object, geometry, program, index) {",
	"class method:WebGLProgram#function () {",
	"class method:Window#function fetchAttributeLocations(gl, program) {",
	"class method:Window#function saveCache(object, geometry, program, index) {",
	"class method:WebGLProgram#function () {",
	"class method:Object#function update(attribute, bufferType) {",
	"class method:Window#function createBuffer(attribute, bufferType) {",
	"class method:Uint16BufferAttribute#onUploadCallback() {",
	"class method:Window#function setupVertexAttributes(object, material, program, geometry) {",
	"class method:Window#function initAttributes() {",
	"class method:WebGLProgram#function () {",
	"class method:Object#function get(attribute) {",
	"class method:Window#function enableAttribute(attribute) {",
	"class method:Window#function enableAttributeAndDivisor(attribute, meshPerAttribute) {",
	"class method:Window#function vertexAttribPointer(index, size, type, normalized, stride, offset) {",
	"class method:Object#function get(attribute) {",
	"class method:Window#function enableAttribute(attribute) {",
	"class method:Window#function enableAttributeAndDivisor(attribute, meshPerAttribute) {",
	"class method:Window#function vertexAttribPointer(index, size, type, normalized, stride, offset) {",
	"class method:Window#function disableUnusedAttributes() {",
	"class method:Object#function get(attribute) {",
	"class method:Object#function get(attribute) {",
	"class method:WebGLIndexedBufferRenderer#function setIndex(value) {",
	"class method:WebGLIndexedBufferRenderer#function setMode(value) {",
	"class method:WebGLIndexedBufferRenderer#function render(start, count) {",
	"class method:Object#function update(count, mode, instanceCount) {",
	"class method:Mesh#onAfterRender() {",
	"class method:Object#function (depthTest) {",
	"class method:Window#function enable(id) {",
	"class method:Object#function (depthMask) {",
	"class method:Object#function (colorMask) {",
	"class method:Object#function setPolygonOffset(polygonOffset, factor, units) {",
	"class method:Window#function disable(id) {",
	"class method:Scene#onAfterRender() {",
	"class method:Object#function resetDefaultState() {"
]
